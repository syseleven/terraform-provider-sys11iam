// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_organization_team

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringdefault"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func OrganizationTeamResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"description": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "A description for the organization team.",
				MarkdownDescription: "A description for the organization team.",
				Validators: []validator.String{
					stringvalidator.LengthAtMost(1000),
					stringvalidator.RegexMatches(regexp.MustCompile("^[^\u0000]*$"), ""),
				},
				Default: stringdefault.StaticString(""),
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "The UUID of the organization team",
				MarkdownDescription: "The UUID of the organization team",
			},
			"name": schema.StringAttribute{
				Required:            true,
				Description:         "A unique name for the organization team.",
				MarkdownDescription: "A unique name for the organization team.",
				Validators: []validator.String{
					stringvalidator.LengthBetween(3, 62),
					stringvalidator.RegexMatches(regexp.MustCompile("^[a-z0-9]+(?:-[a-z0-9]+)*$"), ""),
				},
			},
			"organization_id": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"tags": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "The tags of the organization team.",
				MarkdownDescription: "The tags of the organization team.",
			},
			"team_id": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
		},
	}
}

type OrganizationTeamModel struct {
	Description    types.String `tfsdk:"description"`
	Id             types.String `tfsdk:"id"`
	Name           types.String `tfsdk:"name"`
	OrganizationId types.String `tfsdk:"organization_id"`
	Tags           types.List   `tfsdk:"tags"`
	TeamId         types.String `tfsdk:"team_id"`
}
